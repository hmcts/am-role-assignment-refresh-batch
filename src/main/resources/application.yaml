server:
  port: ${PORT:5333}

management:
  health:
    defaults:
      enabled: true
    diskspace:
      enabled: true
  endpoint:
    health:
      enabled: true
      cache:
        time-to-live: 5s
      show-details: "always"
  security:
    enabled: false
  endpoints:
    health:
      sensitive: false
    web:
      base-path: /
      exposure:
        include: 'health'

#If you use a database then uncomment below lines and update db properties accordingly

spring:
  application:
    name: Role Assignment Refresh Batch
  main:
    web-application-type: none
    allow-bean-definition-overriding: true
  jackson:
    default-property-inclusion: NON_NULL
  batch:
    initialize-schema: never

delete-expired-records: deleteExpiredRecords
batchjob-name: deleteExpiredRecords
batch-size: 20

idam:
  s2s-auth:
    totp_secret: ${AM_ROLE_ASSIGNMENT_REFRESH_BATCH_SECRET:AAAAAAAAAAAAAAAA}
    microservice: am_role_assignment_refresh_batch
    url: ${IDAM_S2S_URL:http://localhost:4502}
  api.url: ${IDAM_USER_URL:http://localhost:5000}
  client:
    id: ${ORM_IDAM_CLIENT_ID:am_docker}
    secret: ${ORG_ROLE_MAPPING_IDAM_CLIENT_SECRET:am_docker_secret}
    redirect_uri: ${ORG_ROLE_MAPPING_IDAM_REDIRECT_URI:http://localhost:4096/oauth2redirect}
    admin:
      userId: ${ORG_ROLE_MAPPING_IDAM_ADMIN_USERID:}
      secret: ${ORG_ROLE_MAPPING_IDAM_ADMIN_PASSWORD:}
      scope: ${ORG_ROLE_MAPPING_IDAM_ADMIN_SCOPE:openid profile roles authorities}

feign:
  client:
    config:
      default:
        connectTimeout: 5000
        readTimeout: 5000
        loggerLevel: FULL
      roleAssignmentApp:
        url: ${ROLE_ASSIGNMENT_APP_URL:http://localhost:4096}
  hystrix:
    enabled: ${ENABLE_FEIGN_HYSTRIX:false}

roleAssignmentAppUrl: ${ROLE_ASSIGNMENT_APP_URL:http://localhost:4096}
