buildscript {
    repositories {
        mavenLocal()
        mavenCentral()
        maven { url 'https://jitpack.io' }
    }
    dependencies {
        classpath("net.serenity-bdd:serenity-gradle-plugin:2.4.24")
        classpath 'info.solidsoft.gradle.pitest:gradle-pitest-plugin:1.7.4'
    }
}

plugins {
    id 'application'
    id 'uk.gov.hmcts.java' version '0.12.21'
    id 'pmd'
    id 'jacoco'
    id 'org.springframework.boot' version '2.6.6'
    id 'info.solidsoft.pitest' version '1.7.4'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'java'
    id 'com.github.ben-manes.versions' version '0.40.0'
    id 'org.sonarqube' version '3.3'
}

apply plugin: "info.solidsoft.pitest"
apply plugin: 'java'
apply plugin: 'net.serenity-bdd.aggregator'
apply plugin: 'project-report'
apply plugin: 'idea'
apply plugin: 'io.spring.dependency-management'

def versions = [
        junit          : '5.5.0',
        lombok         : '1.18.6',
        reformLogging  : '5.1.7',
        reformS2sClient: '4.0.2',
        serenity       : '2.1.0',
        gradlePitest   : '1.3.0',
        sonarPitest    : '0.5',
        pitest         : '1.7.4',
        springBoot     : '2.6.6',
        springHystrix  : '2.1.1.RELEASE',
        spring         : '5.3.18',
        rest_assured   : '3.3.0',
        feign_jackson  : '9.7.0',
        log4JVersion   : '2.17.1'
]

mainClassName = 'uk.gov.hmcts.reform.roleassignmentrefresh.RoleAssignmentRefreshApplication'
def jarName = 'am-role-assignment-refresh-batch.jar'

pmd {
    toolVersion = '6.21.0'
    sourceSets = []
}

group = 'uk.gov.hmcts.reform.roleassignmentrefresh'
version = '0.0.1'

allprojects {
    sourceCompatibility = '11'
    targetCompatibility = '11'
}

jacocoTestCoverageVerification {
    violationRules {
        rule {
            limit {
                counter = 'LINE'
                value = 'COVEREDRATIO'
                minimum = 0.0
            }
        }
    }
}

sourceSets {
    integrationTest {
        java {
            compileClasspath += main.output + test.output
            runtimeClasspath += main.output + test.output
            srcDir file('src/integrationTest/java')
        }
        resources.srcDir file('src/integrationTest/resources')
    }
}

tasks.withType(JavaCompile) {
    options.compilerArgs << "-Xlint:unchecked" << "-Werror"
}

task integration(type: Test, description: 'Runs the integration tests.', group: 'Verification') {
    testClassesDirs = sourceSets.integrationTest.output.classesDirs
    classpath = sourceSets.integrationTest.runtimeClasspath
    mustRunAfter test
    finalizedBy aggregate
}
check.dependsOn integration

task fortifyScan(type: JavaExec)  {
    main("uk.gov.hmcts.fortifyclient.FortifyClientMainApp")
    classpath += sourceSets.test.runtimeClasspath
    jvmArgs = ['--add-opens=java.base/java.lang.reflect=ALL-UNNAMED']
    // The line below prevents the build from failing if the Fortify scan detects issues
    ignoreExitValue = true as JavaExecSpec
}

jacocoTestReport {
    executionData(test)
    reports {
        xml.enabled(true)
        csv.enabled(false)
        xml.destination file("${buildDir}/reports/jacoco/test/jacocoTestReport.xml")
    }
}

project.tasks['sonarqube'].dependsOn test, integration, jacocoTestReport

jacoco {
    toolVersion = "0.8.2"
}

pitest {
    pitestVersion = "1.5.2"
    testPlugin = "junit5"
    targetClasses = ['uk.gov.hmcts.reform.*']
    excludedClasses = ['uk.gov.hmcts.reform.roleassignmentrefresh.*Application',
                       '*config*',
                       '*exception*',
                       '*GenericArrayUserType*',
                       '*launchdarkly*',
                       '*oidc*',
                       '*RefreshORMRules*,',
                       'uk.gov.hmcts.reform.roleassignmentrefresh.util.Swagger2SpringBoot']
    excludedMethods = ['']
    threads = 15
    outputFormats = ['XML', 'HTML']
    timestampedReports = true
    mutationThreshold = 60
}

sonarqube {
    properties {
        property "sonar.projectName", "am-role-assignment-refresh-batch"
        property "sonar.projectKey", "am-role-assignment-refresh-batch"
        property "sonar.coverage.jacoco.xmlReportPaths", "${project.buildDir}/reports/jacoco/test/jacocoTestReport.xml"
        property "sonar.exclusions", "**config**," +
                "**exception**," +
                "**constants**," +
                "src/main/java/uk/gov/hmcts/reform/roleassignmentrefresh/data/Refresh*," +
                "**model**,"+
                "**OIdcAdminConfiguration**,"+
                "**Application.java,"
        property "sonar.pitest.mode", "reuseReport"
        property "sonar.pitest.reportsDirectory", "build/reports/pitest"
    }
}

project.tasks['sonarqube'].dependsOn test, integration, jacocoTestReport
project.tasks['sonarqube'].group = "Verification"

dependencyUpdates.resolutionStrategy {
    componentSelection { rules ->
        rules.all {
            def isNonStable = { String version ->
                ['alpha', 'beta', 'rc', 'cr', 'm', 'preview', 'b', 'ea'].any { qualifier ->
                    version ==~ /(?i).*[.-]\$qualifier[.\\d-+]*/
                }
            }
            if (isNonStable(candidate.version) && !isNonStable(currentVersion)) {
                selection.reject('Release candidate')
            }
        }
    }
}

//https://jeremylong.github.io/DependencyCheck/dependency-check-gradle/configuration.html
dependencyCheck {
    suppressionFile = 'config/owasp/suppressions.xml'
}

dependencyUpdates.resolutionStrategy = {
    componentSelection { rules ->
        rules.all { ComponentSelection selection ->
            boolean rejected = ['alpha', 'beta', 'rc', 'cr', 'm'].any { qualifier ->
                selection.candidate.version ==~ /(?i).*[.-]${qualifier}[.\d-]*/
            }
            if (rejected) {
                selection.reject('Release candidate')
            }
        }
    }
}

repositories {
    mavenLocal()
    mavenCentral()
    maven {
        url 'https://jitpack.io'
    }
}


dependencies {
    implementation(group: 'org.springframework.boot', name: 'spring-boot-starter-batch')
    implementation(group: 'org.springframework.boot', name: 'spring-boot-starter-data-jpa', version: versions.springBoot)
    implementation(group: 'org.springframework', name: 'spring-core', version: versions.spring)
    implementation(group: 'org.springframework', name: 'spring-beans', version: versions.spring)
    implementation(group: 'org.springframework', name: 'spring-context', version: versions.spring)
    implementation(group: 'org.springframework', name: 'spring-core', version: versions.spring)

    implementation group: 'org.springframework.security', name: 'spring-security-web', version: '5.6.2'
    implementation group: 'org.springframework.security', name: 'spring-security-config', version: '5.6.2'
    implementation group: 'org.springframework.security', name: 'spring-security-core', version: '5.6.2'
    implementation group: 'org.springframework.security', name: 'spring-security-crypto', version: '5.6.2'
    implementation group: 'org.springframework.cloud', name: 'spring-cloud-starter-netflix-hystrix', version: '2.2.10.RELEASE'
    implementation group: 'org.springframework.cloud', name: 'spring-cloud-starter-openfeign', version: '3.1.0'

    implementation group: 'com.google.guava', name: 'guava', version: '30.1.1-jre'
    implementation group: 'com.github.hmcts', name: 'service-auth-provider-java-client', version: versions.reformS2sClient
    implementation group: 'com.github.hmcts.java-logging', name: 'logging', version: versions.reformLogging
    implementation group: 'com.github.hmcts.java-logging', name: 'logging-appinsights', version: versions.reformLogging
    implementation group: 'org.postgresql', name: 'postgresql', version: '42.3.3'
    implementation group: 'org.apache.httpcomponents', name: 'httpclient', version: '4.5.13'
    implementation 'com.github.hmcts:properties-volume-spring-boot-starter:0.1.1'
    implementation 'commons-io:commons-io:20030203.000550'
    implementation group: 'org.apache.tomcat.embed', name: 'tomcat-embed-websocket', version: '10.0.16'
    implementation group: 'org.apache.tomcat.embed', name: 'tomcat-embed-core', version: '10.0.20'
    implementation group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.13.2.2'
    implementation group: 'com.fasterxml.jackson', name: 'jackson-bom', version: '2.13.2.20220328', ext: 'pom'
    implementation group: 'com.github.hmcts', name: 'idam-java-client', version: '2.0.1'
    implementation group: 'uk.gov.hmcts.reform.auth', name: 'auth-checker-lib', version: '2.1.4'
    implementation group: 'javax.inject', name: 'javax.inject', version: '1'
    implementation group: 'com.launchdarkly', name: 'launchdarkly-java-server-sdk' , version: '5.6.5'
    implementation 'org.jetbrains:annotations:23.0.0'
    implementation group: 'org.springframework.retry', name: 'spring-retry', version: '1.3.3'


    testImplementation group: 'org.slf4j', name: 'slf4j-api', version: '1.7.30'
    testImplementation 'org.springframework.batch:spring-batch-test:4.3.5'
    testImplementation(group: 'org.springframework.boot', name: 'spring-boot-starter-test', version: versions.springBoot) {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
        exclude group: 'junit', module: 'junit'
        exclude group: "org.apache.tomcat.embed", module: "tomcat-embed-websocket"
        exclude group: "org.apache.tomcat.embed", module: "tomcat-embed-core"
    }

    pitest 'org.pitest:pitest-junit5-plugin:0.15'
    testImplementation group: 'org.junit.jupiter', name: 'junit-jupiter-api', version: versions.junit
    testImplementation group: 'org.junit.jupiter', name: 'junit-jupiter-params', version: versions.junit
    testRuntimeOnly group: 'org.junit.jupiter', name: 'junit-jupiter-engine', version: versions.junit

    testImplementation 'org.codehaus.sonar-plugins:sonar-pitest-plugin:0.5'
    testImplementation group: 'org.pitest', name: 'pitest', version: versions.pitest
    testImplementation 'info.solidsoft.gradle.pitest:gradle-pitest-plugin:1.7.4'
    testImplementation 'org.codehaus.sonar-plugins:sonar-pitest-plugin:0.5'

    testImplementation group: 'io.rest-assured', name: 'rest-assured', version: versions.rest_assured
    testImplementation group: 'io.github.openfeign', name: 'feign-jackson', version: versions.feign_jackson
    testImplementation('com.opentable.components:otj-pg-embedded:1.0.0')
    testImplementation 'com.github.hmcts:fortify-client:1.2.0:all'

    compileOnly group: 'org.projectlombok', name: 'lombok', version: versions.lombok
    annotationProcessor group: 'org.projectlombok', name: 'lombok', version: versions.lombok
    integrationTestImplementation group: 'net.serenity-bdd', name: 'serenity-core', version: versions.serenity
    integrationTestImplementation group: 'net.serenity-bdd', name: 'serenity-junit', version: versions.serenity
    integrationTestImplementation group: 'net.serenity-bdd', name: 'serenity-rest-assured', version: versions.serenity
    integrationTestImplementation group: 'net.serenity-bdd', name: 'serenity-spring', version: versions.serenity

    integrationTestImplementation sourceSets.main.runtimeClasspath
    integrationTestImplementation sourceSets.test.runtimeClasspath

}

dependencyManagement {
    dependencies {
        dependencySet(group: 'org.apache.logging.log4j', version: versions.log4JVersion) {
            entry 'log4j-api'
            entry 'log4j-to-slf4j'
        }
    }
}

test {
    useJUnitPlatform()
    failFast = true
}

dependencyManagement {
    dependencies {
        dependencySet(group: 'org.apache.logging.log4j', version: versions.log4JVersion) {
            entry 'log4j-api'
            entry 'log4j-to-slf4j'
        }
    }
}

bootJar {
    archiveFileName = jarName

    manifest {
        attributes('Implementation-Version': project.version.toString())
    }
}

// Gradle 7.x issue, workaround from: https://github.com/gradle/gradle/issues/17236#issuecomment-894768083
rootProject.tasks.named("processIntegrationTestResources") {
    duplicatesStrategy = 'include'
}

configurations {
    runtime.exclude group: "org.glassfish", module: "jakarta.el"
}
