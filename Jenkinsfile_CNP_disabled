#!groovy
properties(
  [
    [
      $class       : 'GithubProjectProperty',
      projectUrlStr: 'https://github.com/hmcts/am-role-assignment-refresh-batch'
    ],
    pipelineTriggers([[$class: 'GitHubPushTrigger']])
  ]
)

@Library("Infrastructure")

def type = "java"
def product = "am"
def component = "role-assignment-refresh-batch"

static LinkedHashMap<String, Object> secret(String secretName, String envVar) {
  [$class     : 'AzureKeyVaultSecret',
   secretType : 'Secret',
   name       : secretName,
   version    : '',
   envVariable: envVar
  ]
}

def vaultOverrides = [
  'preview' : 'aat',
  'spreview': 'saat'
]

def secrets = []

// Configure branches to sync with master branch
//def branchesToSync = ['demo', 'perftest']

withPipeline(type, product, component) {
  onMaster {
    enableSlackNotifications('#am-role-assignment-refresh-batch-builds')
  }
  onPR {
    enableSlackNotifications('#am-role-assignment-refresh-batch-builds')
  }

  overrideVaultEnvironments(vaultOverrides)
  //loadVaultSecrets(secrets)
  enableAksStagingDeployment()
  disableLegacyDeploymentOnAAT()
  disableLegacyDeployment()
  nonServiceApp()

  // Sync environment specific branches with master branch
  //syncBranchesWithMaster(branchesToSync)

  after('test:preview') {
    steps.archiveArtifacts allowEmptyArchive: true, artifacts: '**/target/site/serenity/**'
  }

  after('test:aat') {
    steps.archiveArtifacts allowEmptyArchive: true, artifacts: '**/target/site/serenity/**'
  }
}