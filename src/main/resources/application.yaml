server:
  port: ${PORT:5333}

management:
  health:
    defaults:
      enabled: true
    diskspace:
      enabled: true
  endpoint:
    health:
      enabled: true
      cache:
        time-to-live: 5s
      show-details: "always"
  security:
    enabled: false
  endpoints:
    health:
      sensitive: false
    web:
      base-path: /
      exposure:
        include: 'health'

#If you use a database then uncomment below lines and update db properties accordingly

spring:
  application:
    name: Role Assignment Refresh Batch
  main:
    web-application-type: none
    allow-bean-definition-overriding: true
  jackson:
    default-property-inclusion: NON_NULL
  batch:
    initialize-schema: never
  security:
    oauth2:
      client:
        provider:
          oidc:
            issuer-uri: ${OPEN_ID_API_BASE_URI:https://idam-web-public.aat.platform.hmcts.net/o}
        registration:
          oidc:
            client-id: microservicekey-am-role-assignment-service
            client-secret: ${AM_ROLE_ASSIGNMENT_SERVICE_SECRET:AAAAAAAAAAAAAAAA}
  cache:
    type: ${ENABLE_CACHE:}
    cache-names: token
    caffeine:
      spec: maximumSize=50,expireAfterWrite=120s
oidc.issuer: ${OIDC_ISSUER_URL:https://forgerock-am.service.core-compute-idam-aat.internal:8443/openam/oauth2/hmcts}

idam:
  s2s-auth:
    # AAAAAAAAAAAAAAAA
    totp_secret: ${AM_ROLE_ASSIGNMENT_SERVICE_SECRET:AAAAAAAAAAAAAAAA}
    microservice: am_role_assignment_refresh_batch
    url: ${IDAM_S2S_URL:http://localhost:4502}
  s2s-authorised:
    services: ${ROLE_ASSIGNMENT_S2S_AUTHORISED_SERVICES:ccd_gw,am_role_assignment_service,am_role_assignment_refresh_batch,am_org_role_mapping_service,xui_webapp}
  api.url: ${IDAM_USER_URL:http://localhost:5000}
  client:
    id: ${ROLE_ASSIGNMENT_IDAM_CLIENT_ID:am_docker}
    secret: ${ROLE_ASSIGNMENT_IDAM_CLIENT_SECRET:am_docker_secret}
    redirect_uri: ${ROLE_ASSIGNMENT_IDAM_REDIRECT_URI:http://localhost:4096/oauth2redirect}
    admin:
      userId: ${ROLE_ASSIGNMENT_IDAM_ADMIN_USERID:ras-validation-system@hmcts.net}
      secret: ${ROLE_ASSIGNMENT_IDAM_ADMIN_PASSWORD:Pa55word11}
      scope: ${ROLE_ASSIGNMENT_IDAM_ADMIN_SCOPE:openid profile roles authorities}

feign:
  client:
    config:
      default:
        connectTimeout: 5000
        readTimeout: 5000
        loggerLevel: FULL
      roleAssignmentApp:
        url: ${ROLE_ASSIGNMENT_APP_URL:http://localhost:4096}
roleAssignmentAppUrl: ${ROLE_ASSIGNMENT_APP_URL:http://localhost:4096}

testS2S:
  api:
    url: "/testS2SAuthorization"

delete-expired-records: deleteExpiredRecords
batchjob-name: deleteExpiredRecords
batch-size: 2

launchdarkly:
  sdk:
    key: ${LD_SDK_KEY:}
    environment: ${LAUNCH_DARKLY_ENV:pr}
    user: am-${LAUNCH_DARKLY_ENV:local}